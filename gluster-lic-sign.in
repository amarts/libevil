#!/bin/bash -e


function validate_uuid()
{
    left=$(echo $1 | sed -r 's/[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}//g');

    if [ ! -z $left ]; then
        echo "FATAL: invalid UUID $1 (line $lineno)";
        exit 1
    fi
}


function validate_secs()
{
    if [ ! -z $(echo $1 | sed 's/[0-9]*//g') ]; then
        echo "FATAL: invalid number $1 (line $lineno)";
        exit 1;
    fi
}


function validate_license_line()
{
    set $@;

    validate_uuid "$1";

    validate_secs "$2";
}


function validate_license_request()
{
    filename="$1";

    if [ "x$filename" != "x${filename%.lsr}" ]; then
        echo "FATAL: invalid filename $filename";
        exit 1;
    fi

    if [ "x$filename" != "x${filename%.asc}" ]; then
        echo "FATAL: invalid filename $filename";
        exit 1;
    fi

    echo -n "Validating license request $filename ... ";

    if [ ! -f $filename ]; then
        echo "FATAL: file does not exist";
        exit 1;
    fi

    if [ $(wc -l $filename | cut -f1 -d' ') -lt 2 ]; then
        echo "FATAL: file has fewer than 2 lines";
        exit 1;
    fi

    grep -E '^ *[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}' $filename | while read line; do
        validate_license_line "$line";
    done;

    lineno=$(grep -E '^ *[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}' $filename | wc -l);

    echo "done."
}


function validate_num_days()
{
    numdays=$1

    while [ -z "$numdays" ]; do
        echo -n "Please enter the number days to generate the license for: "
        read numdays;
    done

    if [ ! -z $(echo "$numdays" | sed 's/[0-9]*//g') ]; then
        echo "FATAL: invalid number of days $1";
        exit 1;
    fi

    if [ $numdays -gt 366 ]; then
        cat >&2 <<EOF
================================================================================
 WARNING: Generating a license for an unusually high ($numdays) number of days!!
================================================================================
                     [Hit ENTER to continue]
EOF
        read
    fi
}


function generate_license()
{
    expire=$(($now + ($numdays * 86400)));
    lsrfile=${filename%.*}.lsr;

    grep -E '^\ *[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}' $filename > $lsrfile;
    sed -i -r -e "s/^([^ ]+[ ]+)[^ ]+(.*)\$/\1$expire\2/g" $lsrfile;

    expirestr=$(date -u --date="1970-01-01 00:00:00 $expire seconds");
}


function sign_license()
{
    ascfile=${lsrfile%.lsr}.asc;

    cat $lsrfile | gpg --output $ascfile --clearsign;
    cat <<EOF

Generated license file for $lineno hosts expiring on $expirestr -

  $ascfile

The above signed license file may be handed back to the requestor.

EOF
}


function main()
{
    now=$(date '+%s');

    if [ $# -lt 1 -o $# -gt 2 ]; then
        cat <<EOF

Usage: $0 <LICENSE.REQ> [NUM-DAYS]

<LICENSE.REQ> - License request file created with gluster-lic-request
                on the Gluster cluster.

[NUM-DAYS]    - Number of days for which the generated license should
                be valid, from the time of signing (i.e from now.)
EOF

        exit
    fi

    validate_license_request "$1";

    validate_num_days "$2";

    generate_license;

    sign_license;
}

main "$@";
